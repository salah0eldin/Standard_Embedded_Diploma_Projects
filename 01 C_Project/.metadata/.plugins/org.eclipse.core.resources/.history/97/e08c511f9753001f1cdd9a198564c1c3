/*
 * stdList.h
 *
 *  Created on: Aug 6, 2024
 *      Author: dell
 */

#ifndef HEADERS_STDLIST_H_
#define HEADERS_STDLIST_H_

#include <stdio.h>
#include <stdlib.h>

#ifndef nullptr
#define nullptr (void*)0
#endif

typedef enum {
	SUCCESS, ID_TOKEN, ID_NOT_FOUND, CANCEL
} LIST_ERRORS;

typedef struct {
	int id;
	int age;
	float gpa;
	char name[50];
} student;

typedef struct node {
	student data;
	struct node *next;
} node;

int addStdToList(node **stdListptr, student *std);

void dispList(node **stdListptr);

node* findStudent(node **stdListptr, int id);

void updateStdFromList(node **stdListptr, int id, node *std);

int deleteStdFromLlist(node **stdListptr, int id);

void freeStdList(node **stdListptr);

float calcAvgGpaList(node **stdListptr);

#endif /* HEADERS_STDLIST_H_ */
